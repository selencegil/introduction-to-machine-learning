# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oAELFxi7kycH5P92CqWGBYS9sCBddKEC
"""

input = input("isim giriniz:")

input

dictionary = {'turkey' : 'istanbul ', 'england' : 'londra'}
print(dictionary.keys())
print(dictionary.values())

print (10<12)

i=0

while i != 5 :
print("i : 1")
i+=

liste = list("merhaba")
liste

liste1 = [0,1,2,3,4,5,6,7,8,9]
liste1

len(liste1)

liste[len(liste)-1]

liste [:4]

liste [5:]

liste2 = [1,2,3]
liste3 = [4,5,6]
liste4 = liste2 + liste3
liste4

demet = (1,1,1,1,1,1,1,2,2,2,2,3,5,)
demet

type(demet)

demet.count(1)

demet = ("selen", "helin", "selcan", "rabia")
demet.index("selen")

listea = [1,2,3,4,5,6]
listea[2] = 5
listea

demet= (1,2,3,4,5,6,)
demet[2]=5
demet

sözlük = {"sıfır":0,"bir":1,"iki":2}
sözlük

sözlük["bir"]

sözlük["beş"]=5
sözlük

sözlük2 = {"bir":[[1,2],[3,4],[5,6]]}
sözlük2

sözlük2["bir"][1][0]

sözlüka = {"bir":1,"iki":2,"üç":3,"dört":4}
sözlüka

sözlüka.keys()

sözlüka.values()

sözlüka.items()

input("lütfen bir sayı giriniz")

a = input ("yaşınızı giriniz ")
print("kullanıcının yaşı:",a)

a = int(input("sayı "))
print(a*3)

a = int(input("birinci sayıyı giriniz"))
b = int(input("ikinci sayıyı giriniz"))
c = int(input("üçüncü sayıyı giriniz"))

print("toplamları:" , a+b+c)

data = pd.read_csv('../input/pokemon.csv')

series = data['Defense']        # data['Defense'] = series
print(type(series))
data_frame = data[['Defense']]  # data[['Defense']] = data frame
print(type(data_frame))

import numpy as np

teklidizi = np.array([1,2,3,4,5,6,7,8,9])
print(teklidizi)

array1 = np.arange(1,5)
print(array1)

randomInteger = np.random.randint(low=50 , high=101, size=(6))
print(randomInteger)

i=10
while i=! 0:
  print("i:",i)

  i--
  print(i," is equal to 5")

dictionary = {'france':'paris','england':'london'}
for key, value in dictionary.items() :
  print(key, ',',value)
  print('')

from sklearn import datasets

import matplotlib.pyplot as plt

# Load the digits dataset
digits = datasets.load_digits()
print(type(digits))
print(len(digits))

# Display the last digit
plt.figure(1, figsize=(5, 5))
plt.imshow(digits.images[5], cmap=plt.cm.gray_r, interpolation="nearest")
plt.show()

import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from sklearn import datasets
from sklearn.decomposition import PCA

# import some data to play with
iris = datasets.load_iris()
X = iris.data[:, :2]  # we only take the first two features.
y = iris.target

x_min, x_max = X[:, 0].min() - 0.5, X[:, 0].max() + 0.5
y_min, y_max = X[:, 1].min() - 0.5, X[:, 1].max() + 0.5

plt.figure(2, figsize=(8, 8))
plt.clf()

# Plot the training points
plt.scatter(X[:, 0], X[:, 1], c=y, cmap=plt.cm.Set1, edgecolor="k")
plt.xlabel("Sepal length")
plt.ylabel("Sepal width")

plt.xlim(x_min, x_max)
plt.ylim(y_min, y_max)
plt.xticks(())
plt.yticks(())

# To getter a better understanding of interaction of the dimensions
# plot the first three PCA dimensions
fig = plt.figure(1, figsize=(8, 6))
ax = Axes3D(fig, elev=-150, azim=110)
X_reduced = PCA(n_components=3).fit_transform(iris.data)
ax.scatter(
    X_reduced[:, 0],
    X_reduced[:, 1],
    X_reduced[:, 2],
    c=y,
    cmap=plt.cm.Set1,
    edgecolor="k",
    s=40,
)
ax.set_title("First three PCA directions")
ax.set_xlabel("1st eigenvector")
ax.w_xaxis.set_ticklabels([])
ax.set_ylabel("2nd eigenvector")
ax.w_yaxis.set_ticklabels([])
ax.set_zlabel("3rd eigenvector")
ax.w_zaxis.set_ticklabels([])

plt.show()

